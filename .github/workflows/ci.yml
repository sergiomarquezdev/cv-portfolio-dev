name: 🚀 CI/CD - Build & Validate (Cloudflare Pages Deploy)

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.editorconfig'
      - '.gitignore'
      - 'docs/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.editorconfig'
      - '.gitignore'
      - 'docs/**'
  workflow_dispatch:

permissions:
  contents: write # Permitir commits y push

jobs:
  # 🧪 Testing & Quality Assurance
  test-and-validate:
    name: 🔍 Quality Assurance
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5.0.0

      - name: ⚙️ Set up Node.js 22.x
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22.x

      - name: 🚀 Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🔎 TypeScript validation
        run: |
          echo "🔍 Running TypeScript check..."
          bun run type-check
          echo "✅ TypeScript validation passed!"

      - name: 🧹 Biome code quality
        run: |
          echo "🧹 Running Biome linting..."
          bun run lint
          echo "✅ Code quality check completed!"

      - name: 💄 Biome formatting check
        run: |
          echo "💄 Checking code formatting..."
          bun run format:check
          echo "✅ Code formatting is consistent!"

      - name: 🏗️ Build validation
        run: |
          echo "🏗️ Building project..."
          bun run build
          echo "✅ Build completed successfully!"

      - name: 📊 Build metrics
        run: |
          echo "📊 Build Metrics:"
          echo "📁 Build output size:"
          du -sh dist/
          echo "📄 Generated pages:"
          find dist -name "*.html" | wc -l | xargs echo "HTML files:"
          echo "🎨 CSS files:"
          find dist -name "*.css" | wc -l | xargs echo "CSS files:"
          echo "⚡ JS files:"
          find dist -name "*.js" | wc -l | xargs echo "JS files:"

  # 🔧 Auto-fix workflow (runs only on test failures)
  auto-fix:
    name: 🤖 Auto-fix Issues
    runs-on: ubuntu-latest
    needs: test-and-validate
    if: failure() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: ⚙️ Set up Node.js 22.x
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22.x

      - name: 🚀 Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🔧 Auto-fix Biome issues
        run: |
          echo "🔧 Attempting to auto-fix Biome issues..."
          bun run lint:fix || true
          echo "✅ Biome auto-fix completed!"

      - name: 🎨 Auto-format with Biome
        run: |
          echo "🎨 Auto-formatting code with Biome..."
          bun run format
          echo "✅ Biome formatting completed!"

      - name: 📝 Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Changes detected after auto-fix"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No changes after auto-fix"
          fi

      - name: 🚀 Commit and push auto-fixes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "🤖 Auto-fix: Biome linting and formatting

          - 🧹 Applied Biome auto-fixes
          - 💄 Applied Biome formatting
          - 🔄 Automated by GitHub Actions

          [skip ci]"
          git push

      - name: ✅ Re-run validation after auto-fix
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          echo "🔄 Re-running validation after auto-fix..."
          bun run validate
          echo "✅ Validation passed after auto-fix!"

  # 📈 Build Verification (only after successful tests)
  build-verification:
    name: 🏗️ Build Verification
    runs-on: ubuntu-latest
    needs: test-and-validate
    if: success()
    timeout-minutes: 15

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5.0.0

      - name: ⚙️ Set up Node.js 22.x
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22.x

      - name: 🚀 Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🏗️ Production build
        run: |
          echo "🏗️ Creating production build..."
          npm run build:prod
          echo "✅ Production build completed!"

      - name: 📊 Performance analysis
        run: |
          echo "📊 Analyzing build performance..."
          echo "📁 Total build size:"
          du -sh dist/
          echo "🗂️ File breakdown:"
          find dist -type f -exec ls -lh {} \; | awk '{print $5 " " $9}' | sort -hr | head -20
          echo "⚡ Bundle analysis complete!"

      - name: 🎯 Build artifacts summary
        run: |
          echo "🎯 Build Summary:"
          echo "📄 HTML pages: $(find dist -name '*.html' | wc -l)"
          echo "🎨 CSS files: $(find dist -name '*.css' | wc -l)"
          echo "⚡ JS files: $(find dist -name '*.js' | wc -l)"
          echo "🖼️ Images: $(find dist -name '*.png' -o -name '*.jpg' -o -name '*.jpeg' -o -name '*.svg' -o -name '*.webp' | wc -l)"
          echo "📦 Other assets: $(find dist -type f ! -name '*.html' ! -name '*.css' ! -name '*.js' ! -name '*.png' ! -name '*.jpg' ! -name '*.jpeg' ! -name '*.svg' ! -name '*.webp' | wc -l)"
