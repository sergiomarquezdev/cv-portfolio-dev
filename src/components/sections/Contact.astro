---
import Section from "../Section.astro";
import { WEB3FORMS_API_KEY } from "@cv";
---

<Section title="Contacto">
  <form
    action="https://api.web3forms.com/submit"
    method="POST"
    id="form"
    class="contact-form needs-validation"
    novalidate
  >
    <!-- Obligatorio para Web3Forms -->
    <input type="hidden" name="access_key" value={WEB3FORMS_API_KEY} />
    <input
      type="checkbox"
      class="hidden"
      style="display:none"
      name="botcheck"
    />

    <div class="form-group">
      <label for="name">Nombre</label>
      <input
        type="text"
        id="name"
        name="name"
        required
        aria-describedby="nameFeedback"
      />
      <div id="nameFeedback" class="empty-feedback invalid-feedback">
        Por favor, proporciona tu nombre completo.
      </div>
    </div>

    <div class="form-group">
      <label for="email">Correo Electrónico</label>
      <input
        type="email"
        id="email"
        name="email"
        required
        aria-describedby="emailFeedback"
      />
      <div id="emailFeedback" class="empty-feedback">
        Por favor, proporciona tu correo electrónico.
      </div>
      <div class="invalid-feedback">
        Por favor, proporciona un correo electrónico válido.
      </div>
    </div>

    <div class="form-group">
      <label for="message">Mensaje</label>
      <textarea
        id="message"
        name="message"
        minlength="10"
        required
        aria-describedby="messageFeedback"></textarea>
      <div id="messageFeedback" class="empty-feedback invalid-feedback">
        Por favor, ingresa tu mensaje.
      </div>
    </div>

    <button type="submit">Enviar</button>
    <div id="result" class="mt-3 text-center"></div>
  </form>
</Section>

<style>
  .contact-form {
    display: flex;
    flex-direction: column;
    gap: 16px;
    background: linear-gradient(135deg, #f4f4f4, #ffffff);
    padding: 32px;
    border-radius: 12px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    max-width: 900px;
    margin: 0 auto;
    transition:
      box-shadow 0.3s ease,
      transform 0.3s ease;
  }

  .contact-form:hover {
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);
    transform: scale(1.02);
  }

  .form-group {
    display: flex;
    flex-direction: column;
    position: relative;
  }

  label {
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 8px;
  }

  input,
  textarea {
    padding: 12px;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    font-size: 1rem;
    transition:
      border-color 0.3s ease,
      box-shadow 0.3s ease;
    background: rgba(255, 255, 255, 0.8);
  }

  input:focus,
  textarea:focus {
    border-color: #3498db;
    box-shadow: 0 0 8px rgba(52, 152, 219, 0.3);
  }

  button {
    padding: 12px 24px;
    background-color: #3498db;
    color: white;
    border: none;
    border-radius: 50px;
    cursor: pointer;
    font-size: 1.1rem;
    transition:
      background-color 0.3s ease,
      transform 0.3s ease,
      box-shadow 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  button:before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 200%;
    height: 200%;
    background: rgba(255, 255, 255, 0.2);
    transition: transform 0.5s ease;
    transform: translate(-50%, -50%) scale(0);
    border-radius: 50%;
  }

  button:hover:before {
    transform: translate(-50%, -50%) scale(1);
  }

  button:hover {
    background-color: #2980b9;
    box-shadow: 0 4px 8px rgba(41, 128, 185, 0.4);
  }

  button:active {
    transform: scale(0.95);
  }

  button.loading {
    background-color: #bdc3c7;
    pointer-events: none;
    position: relative;
  }

  button.loading::after {
    content: "...";
    position: absolute;
    right: 10px;
    font-size: 1.1rem;
  }

  .invalid-feedback,
  .empty-feedback {
    display: none;
    color: #e74c3c;
    font-size: 0.875rem;
    margin-top: 4px;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #e74c3c;
  }

  .mt-3 {
    margin-top: 16px;
  }

  #result {
    display: none;
    margin-top: 16px;
    font-size: 1rem;
    padding: 12px;
    border-radius: 6px;
  }

  #result.success {
    color: #27ae60;
    background-color: #e9f7ef;
  }

  #result.error {
    color: #c0392b;
    background-color: #fce4e4;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("form");
    const result = document.getElementById("result");
    const submitButton = document.querySelector('button[type="submit"]');

    if (!form || !result || !submitButton) {
      console.log("Form, result, or submitButton elements not found.");
      return;
    }

    form.addEventListener("submit", function (e) {
      e.preventDefault();
      form.classList.add("was-validated");

      if (!form.checkValidity()) {
        const invalidElement = form.querySelector(":invalid");
        if (invalidElement) invalidElement.focus();
        return;
      }

      const formData = new FormData(form);
      const object = Object.fromEntries(formData);
      const json = JSON.stringify(object);

      // Estado "loading"
      submitButton.classList.add("loading");
      result.innerHTML = '<div class="loading"></div> Enviando...';
      result.classList.remove("error", "success");
      result.style.display = "block";

      fetch("https://api.web3forms.com/submit", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
        body: json,
      })
        .then(async (response) => {
          let json = await response.json();
          if (response.status === 200) {
            result.classList.add("success");
            result.innerHTML = json.message;
          } else {
            console.log(response);
            result.classList.add("error");
            result.innerHTML = "Error: " + json.message;
          }
        })
        .catch((error) => {
          console.error(error);
          result.classList.add("error");
          result.innerHTML = "Algo salió mal. Inténtalo de nuevo.";
        })
        .finally(() => {
          submitButton.classList.remove("loading");
          form.reset();
          form.classList.remove("was-validated");
          setTimeout(() => {
            result.style.display = "none";
          }, 5000);
        });
    });
  });
</script>
