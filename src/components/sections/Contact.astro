---
import Section from "../Section.astro"
import { WEB3FORMS_API_KEY } from "@cv"
---

<Section title="Contacto">
  <form
    action="https://api.web3forms.com/submit"
    method="POST"
    id="form"
    class="contact-form needs-validation"
    novalidate
  >
    <input type="hidden" name="access_key" value={WEB3FORMS_API_KEY} />
    <input type="checkbox" class="hidden" style="display:none" name="botcheck" />

    <div class="form-group">
      <label for="name">Nombre</label>
      <input type="text" id="name" name="name" pattern="[A-Za-z\s]+" required aria-describedby="nameFeedback" />
      <div id="nameFeedback" class="empty-feedback invalid-feedback">Por favor, proporciona tu nombre completo.</div>
    </div>

    <div class="form-group">
      <label for="email">Correo Electrónico</label>
      <input type="email" id="email" name="email" required aria-describedby="emailFeedback" />
      <div id="emailFeedback" class="empty-feedback">Por favor, proporciona tu correo electrónico.</div>
      <div class="invalid-feedback">Por favor, proporciona un correo electrónico válido.</div>
    </div>

    <div class="form-group">
      <label for="message">Mensaje</label>
      <textarea id="message" name="message" minlength="10" required aria-describedby="messageFeedback"></textarea>
      <div id="messageFeedback" class="empty-feedback invalid-feedback">Por favor, ingresa tu mensaje.</div>
    </div>

    <button type="submit">Enviar</button>
    <div id="result" class="mt-3 text-center"></div>
  </form>
</Section>

<style>
  .contact-form {
    display: flex;
    flex-direction: column;
    gap: 16px;
    background: #f4f4f4;
    padding: 24px;
    border-radius: 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  label {
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 8px;
  }

  input, textarea {
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1rem;
  }

  button {
    padding: 10px 20px;
    background-color: #1d4e89;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
  }

  button:hover {
    background-color: #123456;
  }

  .invalid-feedback,
  .empty-feedback {
    display: none;
    color: #dc3545;
    font-size: 0.875rem;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }

  .loading {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: #fff;
    animation: spin 1s ease-in-out infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("form") as HTMLFormElement | null;
    const result = document.getElementById("result") as HTMLElement | null;

    if (!form || !result) {
      console.error("Form or result element not found");
      return;
    }

    form.addEventListener("submit", function (e) {
      e.preventDefault();
      form.classList.add("was-validated");
      if (!form.checkValidity()) {
        (form.querySelectorAll(":invalid")[0] as HTMLElement).focus(); // Se asegura de que el elemento sea un HTMLElement
        return;
      }
      const formData = new FormData(form);
      const object = Object.fromEntries(formData);
      const json = JSON.stringify(object);

      result.innerHTML = '<div class="loading"></div> Enviando...';

      fetch("https://api.web3forms.com/submit", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
        body: json,
      })
        .then(async (response) => {
          let json = await response.json();
          if (response.status == 200) {
            result.classList.add("text-green-500");
            result.innerHTML = json.message;
          } else {
            console.log(response);
            result.classList.add("text-red-500");
            result.innerHTML = json.message;
          }
        })
        .catch((error) => {
          console.log(error);
          result.innerHTML = "Algo salió mal!";
        })
        .then(function () {
          form.reset();
          form.classList.remove("was-validated");
          setTimeout(() => {
            result.style.display = "none";
          }, 5000);
        });
    });
  });
</script>
