---
/**
 * Contact.astro - Componente de formulario de contacto
 *
 * Características:
 * - Implementa un formulario interactivo conectado a Web3Forms
 * - Incluye validación de campos en tiempo real con feedback visual
 * - Gestiona estados de envío, éxito y error con mensajes apropiados
 * - Proporciona feedback visual durante el proceso de envío
 * - Accesible con etiquetas semánticamente correctas y mensajes de error
 * - Adaptable a diferentes tamaños de pantalla
 * - Estilizado para modos claro y oscuro
 */
import Section from "../Section.astro";
const WEB3FORMS_API_KEY = import.meta.env.PUBLIC_WEB3FORMS_API_KEY;
---

<Section title="Contacto">
  <div class="card">
    <form
      action="https://api.web3forms.com/submit"
      method="POST"
      id="form"
      class="contact-form needs-validation"
      novalidate
    >
      <!-- Obligatorio para Web3Forms -->
      <input type="hidden" name="access_key" value={WEB3FORMS_API_KEY} />
      <input
        type="checkbox"
        class="hidden"
        style="display:none"
        name="botcheck"
      />

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="form-group">
          <label for="name" class="block text-gray-700 dark:text-gray-300 font-medium mb-2">Nombre</label>
          <input
            type="text"
            id="name"
            name="name"
            required
            aria-describedby="nameFeedback"
            class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 dark:text-gray-200 focus:border-primary dark:focus:border-primary-light focus:ring-2 focus:ring-primary/20 dark:focus:ring-primary-light/20 outline-none transition-all"
            placeholder="Tu nombre completo"
          />
          <div id="nameFeedback" class="empty-feedback invalid-feedback text-red-500 dark:text-red-400 text-sm mt-1">
            Por favor, proporciona tu nombre completo.
          </div>
        </div>

        <div class="form-group">
          <label for="email" class="block text-gray-700 dark:text-gray-300 font-medium mb-2">Correo Electrónico</label>
          <input
            type="email"
            id="email"
            name="email"
            required
            aria-describedby="emailFeedback"
            class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 dark:text-gray-200 focus:border-primary dark:focus:border-primary-light focus:ring-2 focus:ring-primary/20 dark:focus:ring-primary-light/20 outline-none transition-all"
            placeholder="tu@email.com"
          />
          <div id="emailFeedback" class="empty-feedback text-red-500 dark:text-red-400 text-sm mt-1">
            Por favor, proporciona tu correo electrónico.
          </div>
          <div class="invalid-feedback text-red-500 dark:text-red-400 text-sm mt-1">
            Por favor, proporciona un correo electrónico válido.
          </div>
        </div>
      </div>

      <div class="form-group mt-6">
        <label for="message" class="block text-gray-700 dark:text-gray-300 font-medium mb-2">Mensaje</label>
        <textarea
          id="message"
          name="message"
          minlength="10"
          required
          aria-describedby="messageFeedback"
          class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 dark:text-gray-200 focus:border-primary dark:focus:border-primary-light focus:ring-2 focus:ring-primary/20 dark:focus:ring-primary-light/20 outline-none transition-all h-32"
          placeholder="Escribe tu mensaje aquí..."
        ></textarea>
        <div id="messageFeedback" class="empty-feedback invalid-feedback text-red-500 dark:text-red-400 text-sm mt-1">
          Por favor, ingresa tu mensaje.
        </div>
      </div>

      <div class="mt-6">
        <button
          type="submit"
          class="btn btn-primary px-6 py-3 rounded-lg bg-primary hover:bg-primary-dark dark:bg-primary-light dark:hover:bg-primary text-white font-medium transition-all shadow-sm hover:shadow-md"
        >
          Enviar mensaje
        </button>
      </div>
      <div id="result" class="mt-4 text-center"></div>
    </form>
  </div>
</Section>

<style>
  .contact-form {
    width: 100%;
  }

  .empty-feedback,
  .invalid-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }

  #result {
    display: none;
    font-size: 1rem;
    padding: 12px;
    border-radius: 6px;
  }

  #result.success {
    color: #0d6832;
    background-color: #d1e7dd;
    border: 1px solid #badbcc;
  }

  :global(.dark) #result.success {
    color: #86efac;
    background-color: #064e3b;
    border: 1px solid #065f46;
  }

  #result.error {
    color: #842029;
    background-color: #f8d7da;
    border: 1px solid #f5c2c7;
  }

  :global(.dark) #result.error {
    color: #fca5a5;
    background-color: #7f1d1d;
    border: 1px solid #991b1b;
  }

  button.loading {
    position: relative;
    color: transparent;
  }

  button.loading::after {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    width: 20px;
    height: 20px;
    border: 2px solid #fff;
    border-radius: 50%;
    border-top-color: transparent;
    transform: translate(-50%, -50%);
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    to {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("form") as HTMLFormElement | null;
    const result = document.getElementById("result") as HTMLElement | null;
    const submitButton = document.querySelector('button[type="submit"]') as HTMLButtonElement;

    if (!form || !result || !submitButton) {
      console.warn("No se pudieron encontrar elementos del formulario de contacto.");
      return;
    }

    form.addEventListener("submit", function (e) {
      e.preventDefault();
      form.classList.add("was-validated");

      if (!form.checkValidity()) {
        const invalidElement = form.querySelectorAll(":invalid")[0] as HTMLElement;
        if (invalidElement) invalidElement.focus();
        return;
      }

      const formData = new FormData(form);
      const object = Object.fromEntries(formData);
      const json = JSON.stringify(object);

      // Estado "loading"
      submitButton.classList.add("loading");
      result.innerHTML = 'Enviando...';
      result.classList.remove("error", "success");
      result.style.display = "block";

      fetch("https://api.web3forms.com/submit", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
        body: json,
      })
        .then(async (response) => {
          let json = await response.json();
          if (response.status == 200) {
            result.classList.add("success");
            result.innerHTML = json.message;
            form.reset();
            form.classList.remove("was-validated");
          } else {
            if (response.status >= 500) {
              console.error("Error del servidor al enviar el formulario:", response.status);
            }
            result.classList.add("error");
            result.innerHTML = json.message;
          }
        })
        .catch((error) => {
          console.error("Error al enviar el formulario:", error);
          result.innerHTML = "Algo salió mal. Por favor, inténtalo de nuevo.";
          result.classList.add("error");
        })
        .finally(() => {
          submitButton.classList.remove("loading");
          setTimeout(() => {
            result.style.display = "none";
          }, 5000);
        });
    });
  });
</script>
