---
import Section from "../Section.astro";
import { projects } from "@cv";
import GitHub from "@/icons/social/GitHub.astro";

const { title } = Astro.props;
---

<Section title={title || "Proyectos"} id="proyectos">
  <div class="grid grid-cols-1 gap-m sm:grid-cols-2 lg:grid-cols-3">
    {
      projects.map((project, index) => (
        <article
          class="project-card group relative bg-fondo-secundario rounded-xl border border-borde-principal overflow-hidden transition-all duration-500 hover:scale-105 hover:shadow-2xl hover:shadow-azul-principal/20 hover:-translate-y-2"
          data-index={index}
        >
          <div class="p-l space-y-s">
            <header class="space-y-xs">
              <h3 class="text-h4 font-bold text-texto-principal group-hover:text-azul-principal transition-colors duration-300">
                {project.name}
              </h3>
              <p class="text-body-reg text-texto-secundario leading-relaxed line-clamp-3">
                {project.description}
              </p>
            </header>

            <div class="tech-stack space-y-2">
              <h4 class="text-sm font-semibold text-texto-sutil uppercase tracking-wide">
                Stack Tecnológico
              </h4>
              <div class="flex flex-wrap gap-2">
                {project.highlights.map((tech, techIndex) => (
                  <span
                    class="tech-badge px-3 py-1 bg-badge-fondo border border-badge-borde text-badge-texto text-sm rounded-md font-medium transition-all duration-300 hover:scale-105 hover:shadow-md hover:bg-azul-principal hover:text-white"
                    style={`animation-delay: ${techIndex * 100}ms`}
                  >
                    {tech}
                  </span>
                ))}
              </div>
            </div>

            <footer class="flex flex-wrap gap-s pt-s border-t border-borde-principal">
              {project.url && (
                <a
                  href={project.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="action-link flex-1 min-w-fit inline-flex items-center justify-center gap-2 px-4 py-2 bg-green-500 text-white font-medium rounded-lg transition-all duration-300 hover:bg-green-600 hover:text-white hover:scale-105 hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 focus:ring-offset-fondo-secundario"
                  aria-label={`Visitar ${project.name}`}
                >
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z" />
                    <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z" />
                  </svg>
                  Visitar
                </a>
              )}

              {Array.isArray(project.github) && project.github.length > 0 && project.github.map((link) => (
                <a
                  href={link}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="action-link inline-flex items-center gap-2 px-4 py-2 border-2 border-azul-principal text-white font-medium rounded-lg transition-all duration-300 bg-transparent hover:bg-azul-principal hover:text-white hover:scale-105 focus:outline-none focus:ring-2 focus:ring-azul-principal focus:ring-offset-2 focus:ring-offset-fondo-secundario"
                  aria-label={`Ver código fuente de ${project.name} (${String(link).split('/').pop()})`}
                >
                  <GitHub class="w-4 h-4" />
                  {`${String(link).split('/').pop()}`}
                </a>
              ))}
              {typeof project.github === 'string' && (
                <a
                  href={project.github}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="action-link inline-flex items-center gap-2 px-4 py-2 border-2 border-azul-principal text-white font-medium rounded-lg transition-all duration-300 bg-transparent hover:bg-azul-principal hover:text-white hover:scale-105 focus:outline-none focus:ring-2 focus:ring-azul-principal focus:ring-offset-2 focus:ring-offset-fondo-secundario"
                  aria-label={`Ver código fuente de ${project.name} (${String(project.github).split('/').pop()})`}
                >
                  <GitHub class="w-4 h-4" />
                  {`Código: ${String(project.github).split('/').pop()}`}
                </a>
              )}
            </footer>
          </div>

          <div class={`absolute top-4 right-4 w-3 h-3 rounded-full shadow-lg animate-pulse opacity-80 group-hover:opacity-100 transition-opacity duration-300 ${project.isActive ? 'bg-green-400' : 'bg-red-500'}`} />
        </article>
      ))
    }
  </div>

  <div class="mt-l text-center">
    <p class="text-sm text-texto-sutil mb-s">¿Interesado en ver más proyectos?</p>
    <a
      href="https://github.com/sergiomarquezdev"
      target="_blank"
      rel="noopener noreferrer"
      class="inline-flex items-center gap-2 px-6 py-2 border border-azul-principal text-azul-principal font-medium rounded-lg transition-all duration-300 hover:bg-azul-principal hover:text-white hover:scale-105 focus:outline-none focus:ring-2 focus:ring-azul-principal focus:ring-offset-2 focus:ring-offset-fondo-principal"
    >
      <GitHub class="w-4 h-4" />
      Explorar en GitHub
    </a>
  </div>
</Section>

<style>
  .project-card {
    transform: translateZ(0);
    will-change: transform, box-shadow;
    backface-visibility: hidden;
  }

  .project-card:hover {
    transform: translateY(-8px) scale(1.02) translateZ(0);
    box-shadow:
      0 20px 40px rgba(0, 0, 0, 0.15),
      0 0 0 1px rgba(96, 165, 250, 0.1),
      0 0 40px rgba(96, 165, 250, 0.1);
  }

  .tech-badge {
    opacity: 0;
    transform: translateY(10px);
    animation: slideInUp 0.4s ease-out forwards;
  }

  @keyframes slideInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .tech-preview {
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .action-link {
    transform: translateZ(0);
    will-change: transform;
  }

  @media (prefers-reduced-motion: reduce) {
    .project-card {
      transition: none;
    }

    .project-card:hover {
      transform: none;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .tech-badge {
      animation: none;
      opacity: 1;
      transform: none;
    }

    .action-link:hover {
      transform: none;
    }
  }

  @media (hover: none) {
    .project-card:hover {
      transform: none;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .tech-preview {
      display: none;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    if ("IntersectionObserver" in window) {
      const cardsObserver = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const card = entry.target as HTMLElement;
              const techBadges = card.querySelectorAll(".tech-badge");

              techBadges.forEach((badge, index) => {
                setTimeout(() => {
                  badge.classList.add("animate-in");
                }, index * 100);
              });

              cardsObserver.unobserve(card);
            }
          });
        },
        {
          rootMargin: "0px 0px -100px 0px",
          threshold: 0.1,
        }
      );

      const projectCards = document.querySelectorAll(".project-card");
      projectCards.forEach((card) => {
        cardsObserver.observe(card);
      });
    } else {
      const techBadges = document.querySelectorAll(".tech-badge");
      techBadges.forEach((badge) => {
        badge.classList.add("animate-in");
      });
    }
  });
</script>
