---
/**
 * Skills.astro - Componente para mostrar las habilidades técnicas
 *
 * Características:
 * - Muestra las habilidades organizadas en tres categorías: principales, otras tecnologías y bases de datos
 * - Utiliza un objeto de mapeo para vincular los nombres de iconos con sus componentes
 * - Aplica estilos visuales diferenciados para habilidades destacadas
 * - Implementa diseño responsive con ajustes específicos para móvil
 */
import Section from "../Section.astro";
import { highlightedSkills, databasesSkills, otherSkills } from "@cv";
import {
  JavaIcon as Java,
  SpringIcon as Spring,
  AngularIcon as Angular,
  DockerIcon as Docker,
  KubernetesIcon as Kubernetes,
  CICDIcon as CICD,
  JavaScriptIcon as Javascript,
  TypeScriptIcon as Typescript,
  NodeIcon as Node,
  PythonIcon as Python,
  GoIcon as Go,
  PostgreSQLIcon as PostgreSQL,
  OracleSQLIcon as OracleSQL,
  MySQLIcon as MySQL,
  MongoDBIcon as MongoDB,
  FirebaseIcon as Firebase,
  ReactIcon as React,
  VueIcon as Vue,
  AstroIcon as Astrosvg,
} from "@/icons";

const SKILLS_ICONS = {
  Java,
  Spring,
  Angular,
  Docker,
  Kubernetes,
  CICD,
  Javascript,
  Typescript,
  Node,
  Python,
  Go,
  PostgreSQL,
  OracleSQL,
  MySQL,
  MongoDB,
  Firebase,
  React,
  Vue,
  Astrosvg,
} as const;
---

<Section title="Habilidades">
  <div class="space-y-8">
    <!-- Habilidades Destacadas -->
    <div>
      <h3 class="mb-4 text-xl font-semibold text-text-muted">Principales tecnologías</h3>
      <ul class="flex flex-wrap gap-2">
        {
          highlightedSkills.map(({ name, icon }) => {
            const IconComponent = SKILLS_ICONS[icon as keyof typeof SKILLS_ICONS];
            return (
              <li
                class="flex items-center gap-2 rounded-full border border-primary/30 bg-primary/20 px-4 py-2 text-base font-semibold text-primary-light transition hover:-translate-y-0.5"
                aria-label={`Habilidad destacada: ${name}`}
              >
                {IconComponent ? <IconComponent /> : null}
                <span>{name}</span>
              </li>
            );
          })
        }
      </ul>
    </div>

    <!-- Otras habilidades -->
    <div>
      <h3 class="mb-4 text-xl font-semibold text-text-muted">Otras tecnologías</h3>
      <ul class="flex flex-wrap gap-2">
        {
          otherSkills.map(({ name, icon }) => {
            const IconComponent = SKILLS_ICONS[icon as keyof typeof SKILLS_ICONS];
            return (
              <li
                class="flex items-center gap-2 rounded-full border border-secondary/30 bg-card px-4 py-2 text-base text-text-main transition hover:-translate-y-0.5"
                aria-label={`Habilidad: ${name}`}
              >
                {IconComponent && <IconComponent />}
                <span>{name}</span>
              </li>
            );
          })
        }
      </ul>
    </div>

    <!-- Bases de datos -->
    <div>
      <h3 class="mb-4 text-xl font-semibold text-text-muted">Bases de datos</h3>
      <ul class="flex flex-wrap gap-2">
        {
          databasesSkills.map(({ name, icon }) => {
            const IconComponent = SKILLS_ICONS[icon as keyof typeof SKILLS_ICONS];
            return (
              <li
                class="flex items-center gap-2 rounded-full border border-secondary/30 bg-card px-4 py-2 text-base text-text-main transition hover:-translate-y-0.5"
                aria-label={`Base de datos: ${name}`}
              >
                {IconComponent && <IconComponent />}
                <span>{name}</span>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
</Section>

<style>
  .skills-list {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    padding: 0;
    list-style: none;
  }

  .skill-tag {
    display: flex;
    align-items: center;
    gap: 8px;
    background: #f4f4f4;
    border-radius: 50px;
    color: #2c3e50;
    font-size: 0.9rem;
    font-weight: 500;
    padding: 0.5rem 1rem;
    transition: all 0.2s ease;
    border: 1px solid #e0e0e0;
  }

  .skill-tag:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .skill-tag-highlight {
    background: rgba(29, 78, 137, 0.1);
    color: #1d4e89;
    font-weight: 600;
    border-color: rgba(29, 78, 137, 0.2);
  }

  /* Estilos para modo oscuro */
  :global(.dark) .skill-tag {
    background: #2a2a2a;
    color: #e0e0e0;
    border-color: #3a3a3a;
  }

  :global(.dark) .skill-tag:hover {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  }

  :global(.dark) .skill-tag-highlight {
    background: rgba(44, 108, 176, 0.2);
    color: #2c6cb0;
    border-color: rgba(44, 108, 176, 0.3);
  }

  @media (max-width: 700px) {
    .skill-tag {
      font-size: 0.8rem;
      padding: 0.4rem 0.8rem;
    }
  }
</style>
