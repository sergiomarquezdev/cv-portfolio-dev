---
/**
 * Skills.astro - Componente para mostrar las habilidades técnicas
 *
 * Características:
 * - Muestra las habilidades organizadas en tres categorías: principales, otras tecnologías y bases de datos
 * - Utiliza un objeto de mapeo para vincular los nombres de iconos con sus componentes
 * - Aplica estilos visuales diferenciados para habilidades destacadas
 * - Implementa diseño responsive con ajustes específicos para móvil
 * - Micro-interacciones sutiles para mejor experiencia visual
 */
import Section from "../Section.astro";
import { highlightedSkills, databasesSkills, otherSkills } from "@cv";
import {
  JavaIcon as Java,
  SpringIcon as Spring,
  DockerIcon as Docker,
  KubernetesIcon as Kubernetes,
  CICDIcon as CICD,
  NodeIcon as Node,
  PythonIcon as Python,
  FastAPIIcon as FastAPI,
  GoIcon as Go,
  PostgreSQLIcon as PostgreSQL,
  MongoDBIcon as MongoDB,
  PineconeIcon as Pinecone,
  AiIcon as Ai,
  LLMOpsIcon as LLMOps,
  N8nIcon as N8n,
  GCPIcon as GCP,
} from "@/icons";

const SKILLS_ICONS = {
  Java,
  Spring,
  Docker,
  Kubernetes,
  CICD,
  Node,
  Python,
  FastAPI,
  Go,
  PostgreSQL,
  MongoDB,
  Pinecone,
  Ai,
  LLMOps,
  N8n,
  GCP,
} as const;
---

<Section title="Habilidades">
  <div class="space-y-l" id="skills-container">
    <!-- Habilidades Destacadas -->
    <div class="skill-category" data-category="highlighted">
      <h3 class="mb-s text-lg font-semibold text-texto-desactivado">Principales tecnologías</h3>
      <ul class="flex flex-wrap gap-2" id="highlighted-skills">
        {
          highlightedSkills.map(({ name, icon }, index) => {
            const IconComponent = SKILLS_ICONS[icon as keyof typeof SKILLS_ICONS];
            return (
              <li
                class="skill-item flex items-center gap-2 rounded-md border border-badge-borde bg-badge-fondo px-3 py-1 text-base font-semibold text-badge-texto transition-all duration-300 hover:-translate-y-1 hover:shadow-md"
                data-index={index}
              >
                {IconComponent && <IconComponent class="h-5 w-5" />}
                <span>{name}</span>
              </li>
            );
          })
        }
      </ul>
    </div>

    <!-- Otras habilidades -->
    <div class="skill-category" data-category="other">
      <h3 class="mb-s text-lg font-semibold text-texto-desactivado">Otras tecnologías</h3>
      <ul class="flex flex-wrap gap-2" id="other-skills">
        {
          otherSkills.map(({ name, icon }, index) => {
            const IconComponent = SKILLS_ICONS[icon as keyof typeof SKILLS_ICONS];
            return (
              <li
                class="skill-item flex items-center gap-2 rounded-md border border-borde-principal bg-fondo-secundario px-3 py-1 text-base text-texto-principal transition-all duration-300 hover:-translate-y-1 hover:shadow-md"
                data-index={index}
              >
                {IconComponent && <IconComponent class="h-5 w-5" />}
                <span>{name}</span>
              </li>
            );
          })
        }
      </ul>
    </div>

    <!-- Bases de datos -->
    <div class="skill-category" data-category="databases">
      <h3 class="mb-s text-lg font-semibold text-texto-desactivado">Bases de datos</h3>
      <ul class="flex flex-wrap gap-2" id="database-skills">
        {
          databasesSkills.map(({ name, icon }, index) => {
            const IconComponent = SKILLS_ICONS[icon as keyof typeof SKILLS_ICONS];
            return (
              <li
                class="skill-item flex items-center gap-2 rounded-md border border-borde-principal bg-fondo-secundario px-3 py-1 text-base text-texto-principal transition-all duration-300 hover:-translate-y-1 hover:shadow-md"
                data-index={index}
              >
                {IconComponent && <IconComponent class="h-5 w-5" />}
                <span>{name}</span>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
</Section>

<style>
  /* ✅ MICRO-INTERACCIONES: Animación staggered para skills */
  .skill-item {
    opacity: 0;
    transform: translateY(20px) scale(0.9);
    transition:
      opacity 0.4s ease,
      transform 0.4s ease;
  }

  .skill-item.animate-in {
    opacity: 1;
    transform: translateY(0) scale(1);
  }

  /* Stagger delays para cada categoría */
  .skill-category[data-category="highlighted"] .skill-item:nth-child(1) {
    transition-delay: 0ms;
  }
  .skill-category[data-category="highlighted"] .skill-item:nth-child(2) {
    transition-delay: 50ms;
  }
  .skill-category[data-category="highlighted"] .skill-item:nth-child(3) {
    transition-delay: 100ms;
  }
  .skill-category[data-category="highlighted"] .skill-item:nth-child(4) {
    transition-delay: 150ms;
  }
  .skill-category[data-category="highlighted"] .skill-item:nth-child(5) {
    transition-delay: 200ms;
  }
  .skill-category[data-category="highlighted"] .skill-item:nth-child(6) {
    transition-delay: 250ms;
  }
  .skill-category[data-category="highlighted"] .skill-item:nth-child(7) {
    transition-delay: 300ms;
  }

  .skill-category[data-category="other"] .skill-item:nth-child(1) {
    transition-delay: 350ms;
  }
  .skill-category[data-category="other"] .skill-item:nth-child(2) {
    transition-delay: 400ms;
  }
  .skill-category[data-category="other"] .skill-item:nth-child(3) {
    transition-delay: 450ms;
  }
  .skill-category[data-category="other"] .skill-item:nth-child(4) {
    transition-delay: 500ms;
  }
  .skill-category[data-category="other"] .skill-item:nth-child(5) {
    transition-delay: 550ms;
  }

  .skill-category[data-category="databases"] .skill-item:nth-child(1) {
    transition-delay: 600ms;
  }
  .skill-category[data-category="databases"] .skill-item:nth-child(2) {
    transition-delay: 650ms;
  }
  .skill-category[data-category="databases"] .skill-item:nth-child(3) {
    transition-delay: 700ms;
  }
  .skill-category[data-category="databases"] .skill-item:nth-child(4) {
    transition-delay: 750ms;
  }

  /* Hover effects mejorados */
  .skill-item:hover {
    background-color: rgba(96, 165, 250, 0.1);
    border-color: rgba(96, 165, 250, 0.4);
    transform: translateY(-4px) scale(1.05);
  }

  /* Accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .skill-item {
      opacity: 1;
      transform: none;
      transition: none;
    }

    .skill-item:hover {
      transform: none;
    }
  }
</style>

<script>
  // ✅ MICRO-INTERACCIONES: Staggered animation para skills
  document.addEventListener("DOMContentLoaded", () => {
    if ("IntersectionObserver" in window) {
      const skillsObserver = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const skillItems = entry.target.querySelectorAll(".skill-item");

              skillItems.forEach((item, index) => {
                setTimeout(() => {
                  item.classList.add("animate-in");
                }, index * 50); // 50ms stagger between items
              });

              skillsObserver.unobserve(entry.target);
            }
          });
        },
        {
          rootMargin: "0px 0px -50px 0px",
          threshold: 0.2,
        }
      );

      const skillsContainer = document.getElementById("skills-container");
      if (skillsContainer) {
        skillsObserver.observe(skillsContainer);
      }
    } else {
      // Fallback: mostrar todas las skills inmediatamente
      const skillItems = document.querySelectorAll(".skill-item");
      skillItems.forEach((item) => {
        item.classList.add("animate-in");
      });
    }
  });
</script>
