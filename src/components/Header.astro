---
import { basics } from "@cv";
import { MenuIcon } from "../icons";
const { name } = basics;

const navLinks = [
  { href: "#sobre-mi", label: "Sobre mí" },
  { href: "#experiencia", label: "Experiencia" },
  { href: "#proyectos", label: "Proyectos" },
  { href: "#habilidades", label: "Habilidades" },
  { href: "#contacto", label: "Contacto" },
];
---

<header
  id="main-header"
  class="fixed w-full top-0 left-0 z-30 transition-colors duration-300 py-4 bg-dark-surface/90 backdrop-blur-sm border-b border-border-gray"
>
  <div class="container mx-auto px-4">
    <nav class="flex items-center justify-between">
      <a
        href="#"
        id="logo-link"
        class="text-primary-text font-bold text-xl flex items-center elegant-link"
      >
        <span class="text-electric-blue">&lt;</span>{name}<span class="text-electric-blue">/&gt;</span>
      </a>

      <ul class="hidden md:flex space-x-8">
        {
          navLinks.map(({ href, label }) => (
            <li>
              <a
                href={href}
                class="nav-link text-secondary-text hover:text-light-blue transition-all duration-300 elegant-link relative"
              >
                {label}
              </a>
            </li>
          ))
        }
      </ul>

      <button
        id="mobile-menu-button"
        class="md:hidden text-secondary-text hover:text-electric-blue p-2 transition-all duration-200 hover:scale-110 focus:outline-none focus:ring-2 focus:ring-electric-blue focus:ring-offset-2 focus:ring-offset-dark-surface rounded-md"
        aria-label="Abrir menú"
        title="Abrir menú"
        aria-expanded="false"
        aria-controls="mobile-menu"
      >
        <MenuIcon class="h-6 w-6" />
      </button>
    </nav>
  </div>

  <div
    id="mobile-menu"
    role="menu"
    class="hidden md:hidden absolute left-0 right-0 top-full bg-dark-surface shadow-lg border-b border-border-gray backdrop-blur-sm"
  >
    <div class="container mx-auto px-4 py-3">
      <ul class="space-y-2">
        {
          navLinks.map(({ href, label }) => (
            <li>
              <a
                href={href}
                role="menuitem"
                class="nav-link block py-2 text-secondary-text hover:text-electric-blue transition-all duration-300 elegant-link"
              >
                {label}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenuButton = document.getElementById(
      "mobile-menu-button"
    ) as HTMLButtonElement | null;
    const mobileMenu = document.getElementById("mobile-menu");
    const navLinks = document.querySelectorAll(".nav-link");
    const logoLink = document.getElementById("logo-link");
    const header = document.getElementById("main-header");

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener("click", () => {
        const isHidden = mobileMenu.classList.contains("hidden");

        if (isHidden) {
          mobileMenu.classList.remove("hidden");
          mobileMenu.style.opacity = "0";
          mobileMenu.style.transform = "translateY(-10px)";

          requestAnimationFrame(() => {
            mobileMenu.style.transition = "opacity 0.2s ease, transform 0.2s ease";
            mobileMenu.style.opacity = "1";
            mobileMenu.style.transform = "translateY(0)";
          });

          mobileMenuButton.setAttribute("aria-expanded", "true");
        } else {
          mobileMenu.style.opacity = "0";
          mobileMenu.style.transform = "translateY(-10px)";

          setTimeout(() => {
            mobileMenu.classList.add("hidden");
            mobileMenu.style.transition = "";
          }, 200);

          mobileMenuButton.setAttribute("aria-expanded", "false");
        }
      });
    }

    navLinks.forEach((link) => {
      link.addEventListener("click", () => {
        if (mobileMenu && mobileMenuButton && !mobileMenu.classList.contains("hidden")) {
          mobileMenu.style.opacity = "0";
          mobileMenu.style.transform = "translateY(-10px)";

          setTimeout(() => {
            mobileMenu.classList.add("hidden");
            mobileMenu.style.transition = "";
          }, 200);

          mobileMenuButton.setAttribute("aria-expanded", "false");
        }
      });
    });

    if (logoLink && mobileMenu && mobileMenuButton) {
      logoLink.addEventListener("click", () => {
        if (!mobileMenu.classList.contains("hidden")) {
          mobileMenu.style.opacity = "0";
          mobileMenu.style.transform = "translateY(-10px)";

          setTimeout(() => {
            mobileMenu.classList.add("hidden");
            mobileMenu.style.transition = "";
          }, 200);

          mobileMenuButton.setAttribute("aria-expanded", "false");
        }
      });
    }

    const updateActiveSection = () => {
      const sections = document.querySelectorAll("section[id]");
      const scrollPosition = window.scrollY + (header?.offsetHeight || 0) + 100;

      sections.forEach((section) => {
        const sectionElement = section as HTMLElement;
        const sectionTop = sectionElement.offsetTop;
        const sectionHeight = sectionElement.offsetHeight;
        const sectionId = section.getAttribute("id");
        const link = document.querySelector(`.nav-link[href="#${sectionId}"]`);

        if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
          navLinks.forEach((el) => {
            el.classList.remove("text-electric-blue");
            el.classList.add("text-secondary-text");
          });
          link?.classList.remove("text-secondary-text");
          link?.classList.add("text-electric-blue");
        }
      });
    };

    window.addEventListener("scroll", () => {
      updateActiveSection();
    });

    updateActiveSection();
  });
</script>

<style>
  .elegant-link {
    position: relative;
  }

  .elegant-link::after {
    content: "";
    position: absolute;
    bottom: -2px;
    left: 50%;
    width: 0;
    height: 2px;
    background: linear-gradient(
      90deg,
      var(--color-electric-blue, #3b82f6),
      var(--color-vibrant-purple, #8b5cf6)
    );
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }

  .elegant-link:hover::after {
    width: 100%;
  }

  .nav-link.text-electric-blue::after {
    width: 100%;
  }

  @media (max-width: 768px) {
    .elegant-link::after {
      display: none;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .elegant-link::after {
      transition: none;
    }
  }
</style>
