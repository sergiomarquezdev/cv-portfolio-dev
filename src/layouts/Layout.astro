---
import "../styles/global.css";
import MatrixEffect from "@/components/MatrixEffect.astro";
import Terminal from "@/components/Terminal.astro";
import ScrollToTop from "@/components/ScrollToTop.astro";
import Header from "@/components/Header.astro";

interface Props {
  title: string;
  description?: string;
  image?: string;
}

const {
  title = "Sergio M치rquez - Full Stack Developer",
  description = "Portfolio profesional de Sergio M치rquez, desarrollador Full Stack especializado en Java, Angular, Docker y Kubernetes.",
  image = "/images/og-image.jpg"
} = Astro.props;
---

<!doctype html>
<html lang="es" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />

    <!-- Preload fonts -->
    <link
      rel="preload"
      href="/fonts/inter-variable.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />

    <!-- Theme script -->
    <script is:inline>
      // Funci칩n para establecer el tema
      function setTheme(theme) {
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
          localStorage.setItem('theme', 'dark');
        } else {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('theme', 'light');
        }

        // Disparar un evento personalizado para notificar cambios en el tema
        document.dispatchEvent(new CustomEvent('themeChanged', { detail: { theme } }));
      }

      // Comprobar la preferencia del usuario
      const userTheme = localStorage.getItem('theme');
      const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';

      // Establecer el tema inicial
      if (userTheme) {
        setTheme(userTheme);
      } else {
        setTheme(systemTheme);
      }

      // Escuchar cambios en la preferencia del sistema
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (!localStorage.getItem('theme')) {
          setTheme(e.matches ? 'dark' : 'light');
        }
      });

      // Exponer la funci칩n para cambiar el tema
      window.setTheme = setTheme;
    </script>
  </head>
  <body class="transition-colors duration-300 dark:bg-dark dark:text-dark-primary">
    <MatrixEffect />
    <Terminal />
    <ScrollToTop />
    <Header />
    <slot />
  </body>
</html>
