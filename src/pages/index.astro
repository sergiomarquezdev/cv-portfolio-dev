---
import Layout from "@/layouts/Layout.astro";
import About from "@/components/sections/About.astro";
import Experience from "@/components/sections/Experience.astro";
import Hero from "@/components/sections/Hero.astro";
import Projects from "@/components/sections/Projects.astro";
import Skills from "@/components/sections/Skills.astro";
import Training from "@/components/sections/Training.astro";
import Contact from "@/components/sections/Contact.astro";

import { basics } from "@cv";
const { name } = basics;
---

<Layout>
  <Hero />

  <main>
    <section id="sobre-mi" class="fade-in-section pb-16">
      <About />
    </section>

    <section id="experiencia" class="fade-in-section pb-16">
      <Experience />
    </section>

    <section id="proyectos" class="fade-in-section pb-16">
      <Projects />
    </section>

    <section id="habilidades" class="fade-in-section pb-16">
      <Skills />
    </section>

    <section id="formacion" class="fade-in-section pb-16">
      <Training />
    </section>

    <section id="contacto" class="fade-in-section">
      <Contact />
    </section>
  </main>

  <footer class="bg-background-surface pt-8 pb-4 text-center text-text-muted text-sm">
    <div class="max-w-4xl mx-auto px-6">
      <p>&copy; {new Date().getFullYear()} {name}</p>
    </div>
  </footer>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const progressBar = document.getElementById("reading-progress");
    if (progressBar) {
      function updateProgressBar() {
        const scrollPosition = window.scrollY;
        const totalHeight = document.body.scrollHeight - window.innerHeight;
        const progress = (scrollPosition / totalHeight) * 100;
        if (progressBar instanceof HTMLElement) {
          progressBar.style.width = `${progress}%`;
        }
      }

      window.addEventListener("scroll", updateProgressBar);
      window.addEventListener("resize", updateProgressBar);
      updateProgressBar();
    }

    if ("IntersectionObserver" in window) {
      const fadeInObserver = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.classList.add("in-view");
              fadeInObserver.unobserve(entry.target);
            }
          });
        },
        {
          rootMargin: "0px 0px -100px 0px",
          threshold: 0.1,
        }
      );

      const sectionsToAnimate = document.querySelectorAll(".fade-in-section");
      sectionsToAnimate.forEach((section) => {
        fadeInObserver.observe(section);
      });
    } else {
      const sectionsToAnimate = document.querySelectorAll(".fade-in-section");
      sectionsToAnimate.forEach((section) => {
        section.classList.add("in-view");
      });
    }
  });
</script>
