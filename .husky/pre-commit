#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç Running pre-commit validations..."

# Check if this is a merge commit
if git rev-parse --verify MERGE_HEAD >/dev/null 2>&1; then
  echo "‚è≠Ô∏è Merge commit detected, skipping pre-commit hooks"
  exit 0
fi

# Get staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
  echo "‚ÑπÔ∏è No staged files to validate"
  exit 0
fi

# Filter JS/TS/Astro files for linting
LINTABLE_FILES=$(echo "$STAGED_FILES" | grep -E '\.(astro|ts|js|tsx|jsx)$' || true)

if [ -n "$LINTABLE_FILES" ]; then
  echo "üìù Checking staged files with ESLint..."
  echo "$LINTABLE_FILES" | xargs npx eslint
  
  if [ $? -ne 0 ]; then
    echo "‚ùå ESLint found issues. Run 'npm run lint:fix' to fix them."
    exit 1
  fi
fi

# Filter formattable files for Prettier
FORMATTABLE_FILES=$(echo "$STAGED_FILES" | grep -E '\.(astro|ts|js|tsx|jsx|json|md|css)$' || true)

if [ -n "$FORMATTABLE_FILES" ]; then
  echo "üé® Checking Prettier formatting on staged files..."
  echo "$FORMATTABLE_FILES" | xargs npx prettier --check
  
  if [ $? -ne 0 ]; then
    echo "‚ùå Prettier formatting issues found. Run 'npm run format' to fix them."
    exit 1
  fi
fi

# Quick TypeScript check only if TS/Astro files are staged
TS_FILES=$(echo "$STAGED_FILES" | grep -E '\.(astro|ts|tsx)$' || true)

if [ -n "$TS_FILES" ]; then
  echo "üîç Running TypeScript check..."
  npm run type-check
  
  if [ $? -ne 0 ]; then
    echo "‚ùå TypeScript check failed. Fix the type errors before committing."
    exit 1
  fi
fi

echo "‚úÖ All pre-commit validations passed!"
